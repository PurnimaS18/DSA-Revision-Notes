Q - You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Eg - 
Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

SOLUTION
// using fibonacci method
int climbStairs(int n) {
        int StepOne = 1; // initialising stepOne with 1 to see that it gives 1
        int StepTwo = 0; // initialising stepTwo with 0 to see that initially it gives 2
        int ret = 0;
        for(int i=0;i<n;i++)
        {
            ret = StepOne + StepTwo;
            StepTwo = StepOne;
            StepOne = ret;
        }
        return ret;
}

Time Complexity - O(n)
Space Complexity - O(1)