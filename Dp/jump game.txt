Q - You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.

Return true if you can reach the last index, or false otherwise.

Eg - 
Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.

SOLUTION

bool canJump(vector<int>& A) {
    int i = 0, n = A.size();
    for (int reach = 0; i < n && i <= reach; ++i)
        reach = max(i + A[i], reach); // reach is max of the current reach and reach obtained by choosing the jump at that position in addition to the index
    return i == n;// if the index becomes last position then return true else return false 
}

Time Complexity - O(n)
Space Complexity - O(1)