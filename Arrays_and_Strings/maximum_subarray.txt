Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

A subarray is a contiguous part of an array.

Eg 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.

SOLUTION

int maxSubArray(vector<int>& nums) {
        int  cur_sum = nums[0], max_sum = nums[0], i;
        for(i=1;i<nums.size();i++)
        {
            cur_sum = max(nums[i], cur_sum+nums[i]);
            max_sum = max(max_sum, cur_sum);
        }
        return max_sum;
    }

Time complexity - O(n)
Space complexity - O(1)