Q - Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

Eg - 
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.

SOLUTION

    // two pointer approach
    int trap(vector<int>& A) {
    int a=0;
    int b=A.size()-1;
    int maxx=0;
    int leftmax = 0;// maintaining a left max that is the point till where we can store the value
    int rightmax = 0;// maintaining a right max that is the point till where we can store the value
    while(a<=b){
        // traversing until a is less than or equal to b
        leftmax = max(leftmax,A[a]); // leftmax would be either the initial value or the value that was previously leftmax
        rightmax = max(rightmax,A[b]); // rightmax would be either the initial value or the value that was previoulsy rightmax
        if(leftmax<rightmax){
            // checking if leftmax is less than rightmax or not bcoz the one which is smaller will be considered
            maxx+=(leftmax-A[a]);      
            a++;
        }
        else{
            maxx+=(rightmax-A[b]);
            b--;
        }
    }
    return maxx;
    }

Time Complexity - O(n) // single iteration only required
Space Complexity - O(1) // no extra variable taken into consideration